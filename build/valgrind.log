==29327== Memcheck, a memory error detector
==29327== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29327== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==29327== Command: ./simulator
==29327== Parent PID: 8122
==29327== 
==29327== 
==29327== HEAP SUMMARY:
==29327==     in use at exit: 72,740 bytes in 3 blocks
==29327==   total heap usage: 266,572 allocs, 266,569 frees, 17,402,121 bytes allocated
==29327== 
==29327== 12 bytes in 1 blocks are indirectly lost in loss record 1 of 3
==29327==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==29327==    by 0x405656: Eigen::internal::aligned_malloc(unsigned long) (Memory.h:159)
==29327==    by 0x40B20D: void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long) (Memory.h:214)
==29327==    by 0x40A46B: float* Eigen::internal::conditional_aligned_new_auto<float, true>(unsigned long) (Memory.h:374)
==29327==    by 0x408CCF: Eigen::DenseStorage<float, -1, -1, 1, 0>::DenseStorage(Eigen::DenseStorage<float, -1, -1, 1, 0> const&) (DenseStorage.h:509)
==29327==    by 0x406FF0: Eigen::PlainObjectBase<Eigen::Matrix<float, -1, 1, 0, -1, 1> >::PlainObjectBase(Eigen::PlainObjectBase<Eigen::Matrix<float, -1, 1, 0, -1, 1> > const&) (PlainObjectBase.h:520)
==29327==    by 0x405D4C: Eigen::Matrix<float, -1, 1, 0, -1, 1>::Matrix(Eigen::Matrix<float, -1, 1, 0, -1, 1> const&) (Matrix.h:368)
==29327==    by 0x405A8A: Control::Control(Control const&) (Controller.h:25)
==29327==    by 0x40A30E: void __gnu_cxx::new_allocator<Control>::construct<Control, Control&>(Control*, Control&) (new_allocator.h:136)
==29327==    by 0x408901: void std::allocator_traits<std::allocator<Control> >::construct<Control, Control&>(std::allocator<Control>&, Control*, Control&) (alloc_traits.h:475)
==29327==    by 0x406EB9: Control& std::vector<Control, std::allocator<Control> >::emplace_back<Control&>(Control&) (vector.tcc:103)
==29327==    by 0x405266: ProNav::generateControl(std::vector<State, std::allocator<State> > const&) (Controller.cpp:69)
==29327== 
==29327== 36 (24 direct, 12 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 3
==29327==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==29327==    by 0x40B5B0: __gnu_cxx::new_allocator<Control>::allocate(unsigned long, void const*) (new_allocator.h:111)
==29327==    by 0x40A7B1: std::allocator_traits<std::allocator<Control> >::allocate(std::allocator<Control>&, unsigned long) (alloc_traits.h:436)
==29327==    by 0x4091B7: std::_Vector_base<Control, std::allocator<Control> >::_M_allocate(unsigned long) (stl_vector.h:296)
==29327==    by 0x408994: void std::vector<Control, std::allocator<Control> >::_M_realloc_insert<Control&>(__gnu_cxx::__normal_iterator<Control*, std::vector<Control, std::allocator<Control> > >, Control&) (vector.tcc:427)
==29327==    by 0x406EFF: Control& std::vector<Control, std::allocator<Control> >::emplace_back<Control&>(Control&) (vector.tcc:109)
==29327==    by 0x405266: ProNav::generateControl(std::vector<State, std::allocator<State> > const&) (Controller.cpp:69)
==29327==    by 0x45221F: SimManager::simulateProNav(int const&&, int const&&) (SimManager.cpp:321)
==29327==    by 0x45D9B2: std::vector<State, std::allocator<State> > std::__invoke_impl<std::vector<State, std::allocator<State> >, std::vector<State, std::allocator<State> > (SimManager::*)(int const&&, int const&&), SimManager*, int, int>(std::__invoke_memfun_deref, std::vector<State, std::allocator<State> > (SimManager::*&&)(int const&&, int const&&), SimManager*&&, int&&, int&&) (invoke.h:73)
==29327==    by 0x458380: std::__invoke_result<std::vector<State, std::allocator<State> > (SimManager::*)(int const&&, int const&&), SimManager*, int, int>::type std::__invoke<std::vector<State, std::allocator<State> > (SimManager::*)(int const&&, int const&&), SimManager*, int, int>(std::vector<State, std::allocator<State> > (SimManager::*&&)(int const&&, int const&&), SimManager*&&, int&&, int&&) (invoke.h:96)
==29327==    by 0x46D596: decltype (__invoke((_S_declval<0ul>)(), (_S_declval<1ul>)(), (_S_declval<2ul>)(), (_S_declval<3ul>)())) std::thread::_Invoker<std::tuple<std::vector<State, std::allocator<State> > (SimManager::*)(int const&&, int const&&), SimManager*, int, int> >::_M_invoke<0ul, 1ul, 2ul, 3ul>(std::_Index_tuple<0ul, 1ul, 2ul, 3ul>) (thread:244)
==29327==    by 0x46D295: std::thread::_Invoker<std::tuple<std::vector<State, std::allocator<State> > (SimManager::*)(int const&&, int const&&), SimManager*, int, int> >::operator()() (thread:253)
==29327== 
==29327== 72,704 bytes in 1 blocks are still reachable in loss record 3 of 3
==29327==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==29327==    by 0x4EDBF85: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==29327==    by 0x40106C9: call_init.part.0 (dl-init.c:72)
==29327==    by 0x40107DA: call_init (dl-init.c:30)
==29327==    by 0x40107DA: _dl_init (dl-init.c:120)
==29327==    by 0x4000C69: ??? (in /lib/x86_64-linux-gnu/ld-2.23.so)
==29327== 
==29327== LEAK SUMMARY:
==29327==    definitely lost: 24 bytes in 1 blocks
==29327==    indirectly lost: 12 bytes in 1 blocks
==29327==      possibly lost: 0 bytes in 0 blocks
==29327==    still reachable: 72,704 bytes in 1 blocks
==29327==         suppressed: 0 bytes in 0 blocks
==29327== 
==29327== For counts of detected and suppressed errors, rerun with: -v
==29327== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
